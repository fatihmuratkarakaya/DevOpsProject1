controller:
  serviceType: NodePort
  nodePort: 30000
  admin:
    password: "admin"
  
  JCasC:
    configScripts:
      kubernetes-cloud: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                serverUrl: "https://kubernetes.default.svc"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                containerCapStr: "10"
                connectTimeout: 5
                readTimeout: 15
                templates:
                  - name: "kubernetes-agent"
                    namespace: "jenkins"
                    label: "jenkins-agent"
                    nodeUsageMode: NORMAL
                    containers:
                      - name: "jnlp"
                        image: "jenkins/inbound-agent:latest"
                        alwaysPullImage: false
                        workingDir: "/home/jenkins/agent"
                        ttyEnabled: true
                        command: ""
                        args: ""
                        resourceRequestCpu: "500m"
                        resourceLimitCpu: "1000m"
                        resourceRequestMemory: "512Mi"
                        resourceLimitMemory: "1Gi"
                      - name: "kubectl"
                        image: "bitnami/kubectl:latest"
                        command: "cat"
                        ttyEnabled: true
                      - name: "helm"
                        image: "alpine/helm:latest"
                        command: "cat"
                        ttyEnabled: true

      postgresql-pipeline-job: |
        jobs:
          - script: >
              pipelineJob('postgresql-deployment') {
                description('Deploy PostgreSQL to Kubernetes with daily backups')
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/fatihmuratkarakaya/test.git')
                        }
                        branch('*/main')
                      }
                    }
                    scriptPath('Jenkinsfile-postgresql')
                  }
                }
              }
      redis-pipeline-job: |
        jobs:
          - script: >
              pipelineJob('redis-deployment') {
                description('Deploy Redis to Kubernetes with caching configuration')
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/fatihmuratkarakaya/test.git')
                        }
                        branch('*/main')
                      }
                    }
                    scriptPath('Jenkinsfile-redis')
                  }
                }
              }              
  installPlugins:
    - workflow-aggregator:latest
    - git:latest
    - pipeline-stage-view:latest
    - credentials-binding:latest
    - kubernetes:latest
    - configuration-as-code:latest
    - job-dsl:latest  
  
  # Resources
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "1000m"
      memory: "2Gi"
  
  # Java options
  javaOpts: "-Xmx2g -Xms512m"

persistence:
  enabled: true
  size: "10Gi"

serviceAccount:
  create: true
  name: "jenkins"

rbac:
  create: true